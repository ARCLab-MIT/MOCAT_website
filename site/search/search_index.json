{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"MIT Orbital Capacity Assesment Tool","text":""},{"location":"#what-is-mocat","title":"What is MOCAT?","text":"<p>Risk-based capacity, or carrying-capacity, looks at the quantity and configuration of objects that can be placed subject to various constraints. ARCLab is developing the MIT Orbital Capacity Assessment Tool (MOCAT). MOCAT is a suite of MATLAB models to assess the evolution of Low Earth Orbit over long periods of time under different assumptions. There are currently two main portions of MOCAT, MOCAT Monte Carlo (MOCAT-MC), which uses super-computing to evaluate environmental trends in higher fidelity, and MOCAT Source Sink Evolutionary Model (MOCAT-SSEM), which uses a lower fidelity modeling approach capable of running on a personal computer in seconds to minutes.</p> <p>Both tools exist with a basic level of functionality. MOCAT-MC runs are regularly being performed on MIT\u2019s supercomputer to explore a variety of potential future scenarios and optimize the codebase. Runs show good agreement with outputs of the European Space Agency\u2019s DELTA tool.</p>"},{"location":"#contributors","title":"Contributors","text":"<ul> <li>Richard Linares - Faculty Advisor</li> <li>Di Wu - Lab Member</li> <li>Daniel Jang - Lab Member</li> <li>Guillermo Mendoza - Undergraduate Researcher</li> </ul>"},{"location":"#papers","title":"Papers","text":"<ol> <li>Jang, Daniel &amp; D'Ambrosio, Andrea &amp; Lifson, Miles &amp; Pasiecznik, Celina &amp; Linares, Richard. (2022). Stability of the LEO Environment as a Dynamical System. </li> <li>Jang, Daniel &amp; Gusmini, Davide &amp; Siew, Peng Mun &amp; D'Ambrosio, Andrea &amp; Servadio, Simone &amp; Machuca, Pablo &amp; Linares, Richard. (2023). Monte Carlo Methods to Model the Evolution of the Low Earth Orbit Population. </li> <li>Hugh G. Lewis. (2020). Understanding long-term orbital debris population dynamics,</li> </ol>"},{"location":"examples/","title":"Case Studies","text":""},{"location":"examples/#no-launch-scenario","title":"No Launch Scenario","text":"<pre><code>    % SCENARIO PARAMETERS\n    cfgMC.PMD = 0.95;                   % POST MISSION DISPOSAL (active sats only); ESA: 55% RB, 40% PL, 90% Const\n    cfgMC.alph = 0.01;                  % COLLISION AVOIDANCE failure probability with one sat active\n    cfgMC.alph_a = 0;                   % COLLISION AVOIDANCE failure probability with both sat active\n    cfgMC.orbtol = 5;                   % orbit control tolerance for controlled satellites [km]\n    cfgMC.step_control = 2;             % orbit control tolerance checking timesteps\n    cfgMC.P_frag = 0;                   % EXPLOSION PROBABILITY per day of Rocket Body Fragmentation (if P_frag=0, explosions are not considered!)\n    cfgMC.P_frag_cutoff = 18;           % EXPLOSION PROBABILITY age at which objects don't explode.\n    cfgMC.altitude_limit_low = 200;     % SHELL lower limit of altitude [km] \n    cfgMC.altitude_limit_up = 2000;     % SHELL upper limit of altitude [km]\n    cfgMC.missionlifetime = 8;          % PAYLOADS operational life [years]\n\n    % SET PROPAGATION TIMES\n    t0_prop = 0;                                    % initial PROPAGATION time [min]\n    nyears = 10;                                    % length of PROPAGATION [years]\n    tf_prop = cfgMC.YEAR2MIN * nyears;              % length of PROPAGATION [min]\n    cfgMC.dt_days = 5;                              % CUBE METHOD and PROPAGATION sampling time [days]\n    DeltaT = cfgMC.dt_days*cfgMC.DAY2MIN;           % CUBE METHOD and PROPAGATION sampling time [min]\n    cfgMC.tsince = t0_prop:DeltaT:t0_prop+tf_prop;  % PROPAGATION time list\n    cfgMC.n_time = length(cfgMC.tsince);            % length of PROPAGATION time list\n</code></pre>"}]}